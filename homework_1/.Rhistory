mdy("8/31/2015")
mdy(small$`Order Date`) 
small$`Order Date` <- mdy(small$`Order Date`)
summary(small)
small$`Ship Date` <- mdy(small$`Ship Date`)
large$`Ship Date` <- mdy(large$`Ship Date`)

summary(small)
summary(large)

small$`Ship Date` <- mdy(small$`Ship Date`)
large$`Ship Date` <- mdy(large$`Ship Date`)

summary(small$`Ship Date`)
summary(small)
source("scratch.R")
summary(small)
summary(large)
hist(small$`Units Sold`)
hist(large$`Units Sold`)
hist(small$`Total Profit`)
small %>% ggplot() + geom_boxplot(mapping=aes(x=`Units Sold`, y=`Total Revenue`))
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Item Type`, y=`Total Profit`), fill='red')
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Item Type`, y=`Total Cost`), fill='red')
large %>% ggplot() + geom_boxplot(mapping = aes(x=`Item Type`, y=`Total Profit`), fill='red')
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Sales Channel`, y=`Total Profit`), fill='red')
small %>% filter(`Sales Channel` == 'Online') %>% count()
small %>% filter(`Sales Channel` == 'Ofline') %>% count()
small %>% filter(`Sales Channel` == 'Offline') %>% count()
small %>% filter(`Sales Channel`) %>% count()
small %>% filter(`Sales Channel`) %>% table()
small %>% filter(`Sales Channel`) %>% group()
small %>% filter(`Sales Channel`) %>% summary()
summary(small$`Sales Channel`)
small %>% ggplot() + geom_point(mapping=aes(x=`Total Profit`, y=`Total Cost`)
)
small %>% ggplot() + geom_point(mapping=aes(x=`Total Profit`, y=`Total Cost`))
small %>% ggplot() + geom_point(mapping=aes(y=`Total Profit`, y=`Unit Price`))
small %>% ggplot() + geom_point(mapping=aes(y=`Total Profit`, x=`Unit Price`))
hist(small$`Total Cost`)
hist(small$`Total Profit`)
hist(small$`Unit Price`)
small %>% filter(`Total Revenue` == 9)
small %>% filter(`Total Revenue` < 1000)
small %>% filter(`Total Revenue` < 1000) %>% select(`Total Revenue`)
small %>% filter(`Total Revenue` < 1000) %>% select(`Region`, `Total Revenue`)
small %>% filter(`Total Revenue` < 1000) %>% select(`Region`, `Total Revenue`,`Total Profit`)
small %>% filter(`Total Revenue` < 100) %>% select(`Region`, `Total Revenue`,`Total Profit`)
small %>% filter(`Total Profit` < 100) %>% select(`Region`, `Total Revenue`,`Total Profit`)
small %>% filter(`Total Profit` < 100) %>% select(`Region`, `Total Revenue`,`Total Profit`) %>% print(n=100)
small_numeric <- small %>% select(where(is.numeric))
summary(small_numeric)
small_correlations <- cor(small_numeric); corrplot(small_correlations)
library(corrplot)
small_correlations <- cor(small_numeric); corrplot(small_correlations)
corrplot(small_correlations)
s_df <- small_correlations %>%
melt()
library(reshape2)
s_df <- small_correlations %>% melt()
s_df
s_df <- small_numeric %>% melt()
s_df
s_df %>% ggplot(aes(x= value)) + 
geom_density(color='#023020', fill='gray') + facet_wrap(~variable, scales = 'free',  ncol = 4) + theme_bw()
print(
  dfSummary(s_df, 
            varnumbers   = TRUE,
            na.col       = TRUE,
            graph.magnif = .8,
            tmp.img.dir  = "/tmp"),
  method = "render"
)


s_df %>% ggplot(aes(x= value)) + geom_density(color='#023020', fill='gray') + facet_wrap(~variable, scales = 'free',  ncol = 4) + theme_bw()
nrow(s_df)
library(dfSummary)
350000
> library(summarytools)
library(summarytools)

print(
  dfSummary(small_df, 
            varnumbers   = TRUE,
            na.col       = TRUE,
            graph.magnif = .8,
            tmp.img.dir  = "/tmp"),
  method = "render"
)

print(
  dfSummary(s_df, 
            varnumbers   = TRUE,
            na.col       = TRUE,
            graph.magnif = .8,
            tmp.img.dir  = "/tmp"),
  method = "render"
)

  dfSummary(s_df, 
            varnumbers   = TRUE,
            na.col       = TRUE,
            graph.magnif = .8,
            tmp.img.dir  = "/tmp")
s_df %>% ggplot(aes(x= value)) + geom_density(color='#023020', fill='gray') + facet_wrap(~variable, scales = 'free',  ncol = 4) + theme_bw()
hist(small_numeric$`Units Sold`)
hist(small_numeric$`Unit Price`)
s_df %>% ggplot(aes(x= value)) + 
geom_density(color='#023020', fill='gray') + facet_wrap(~variable, scales = 'free',  ncol = 4) + theme_bw()
s_df %>% ggplot(aes(x= value)) + geom_hist(color='#023020', fill='gray') + facet_wrap(~variable, scales = 'free',  ncol = 4) + theme_bw()
s_df %>% ggplot(aes(x= value)) + geom_histogram(color='#023020', fill='gray') + facet_wrap(~variable, scales = 'free',  ncol = 4) + theme_bw()
small_numeric <- small %>% select(where(is.numeric))
small_numeric <- select(-c("Order ID"))
small_numeric <- select(-c(Order ID
small_numeric <- select(-c(Order ID))
small_numeric <- select(-c(`Order ID`))
colnames(small_numeric)
featurePlot(small_df[,2:ncol(small_df)], small_df[,1], plot = "scatter", type = c("p", "smooth"), span = 1)
library(caret)
featurePlot(small_df[,2:ncol(small_df)], small_df[,1], plot = "scatter", type = c("p", "smooth"), span = 1)
small_df
featurePlot(s_df[,2:ncol(s_df)], s_df[,1], plot = "scatter", type = c("p", "smooth"), span = 1)
featurePlot(s_df[,2:ncol(s_df)], s_df[,1], plot = "scatter", type = c("p", "smooth"), span = 1)
s_df[,1]
s_df[,2:ncol(s_df)]
featurePlot(s_df[,2:ncol(s_df)], s_df[,1], plot = "scatter", type = c("p", "smooth"), span = 1)
s_df
small_numeric
small_numeric <- select(-c(Order ID))
small_numeric <- select(-c('Order ID'))
small_numeric <- select('Order ID')
small_numeric <- select(`Order ID`)
colnames(small_numeric)
small_numeric <- select(-c(1))
small_numeric[,1]
select(small_numeric, `Order ID`)
select(small_numeric, -`Order ID`)
small_numeric %>% select(-`Order ID`)
small_numeric <- select(-`Order ID`)
small_numeric <- small %>% select(where(is.numeric)) %>% select(-`Order ID`)
colnames(small_numeric)
featurePlot(x=small_numeric[,1:5], y=small_numeric$`Total Profit`, plot=pairs)
featurePlot(x=small_numeric[,1:5], y=small_numeric$`Total Profit`)
3
library(tidyverse)
library(lubridate)
library(corrplot)
library(reshape2)

small <- read_csv("50000 Sales Records.csv", col_types="fffffcncnnnnn")

small$`Order Date` <- mdy(small$`Order Date`)
small$`Ship Date` <- mdy(small$`Ship Date`)
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Item Type`, y=`Total Profit`), fill='red')
small_numeric <- small %>% select(where(is.numeric)) %>% select(-`Order ID`)
small_correlations <- cor(small_numeric)
corrplot(small_correlations)
s_df <- small_numeric %>% melt()
s_df %>% ggplot(aes(x= value)) + geom_histogram(color='#023020', fill='gray') + facet_wrap(~variable, scales = 'free',  ncol = 4) + theme_bw()

colnames(small_numeric)
>small %>% ggplot() + geom_point(mapping = aes(x=`Total Profit`, y = `Unit Price`)
>small %>% ggplot() + geom_point(mapping = aes(x=`Total Profit`, y = `Unit Price`))
>ggplot() + geom_point(mapping = aes(x=`Total Profit`, y = `Unit Price`))
ggplot() + geom_point(mapping = aes(x=`Total Profit`, y = `Unit Price`))
small %>% ggplot() + geom_point(mapping = aes(x=`Total Profit`, y = `Unit Price`))
small %>% ggplot() + geom_point(mapping = aes(y=`Total Profit`, x = `Unit Price`))
summary(small$`Unit Price`)
small$`Unit Price`
small$`Unit Price` %>% arrange(desc)
small$`Unit Price` %>% arrange()
small$`Unit Price` %>% sort()
hist(small_numeric$`Unit Price`)
hist(small_numeric$`Unit Price`, bin=100)
help(hist)
hist(small_numeric$`Unit Price`, breaks=100)
hist(small_numeric$`Unit Price`, breaks=1000)
hist(small_numeric$`Unit Price`, breaks=10000)
hist(small_numeric$`Unit Price`, breaks=100)
hist(small_numeric$`Unit Price`, breaks=1000)
as.factor(small_numeric$`Unit Price`))
factor(small_numeric$`Unit Price`))
factor(small_numeric$`Unit Price`)
summary(factor(small_numeric$`Unit Price`))
sort()
small_numeric$`Unit Price` %>% sort() % head()
small_numeric$`Unit Price`  % head()
small_numeric %>% select(`Unit Price`) %>% head()
small_numeric %>% select(`Unit Price`) %>% sort() %>% head()
small_numeric %>% select(`Unit Price`) %>% arrange() %>% head()
small_numeric %>% select(`Unit Price`) %>% arrange(`Unit Price`) %>% head()
small_numeric %>% select(`Unit Price`) %>% arrange(desc(`Unit Price`)) %>% head()
small_numeric %>% select(`Order Date`) %>% head()
colnames(small_numeric)
small %>% select(`Order Date`) %>% head()
small %>% select(`Order Date`) %>% as.factor() %>% head()
small %>% select(`Order Date`) %>% as.factor() %>% summary()
featurePlot(x=small_numeric[,1:5], y=small_numeric$`Total Profit`)
library(tidyverse)
library(lubridate)
library(corrplot)
library(reshape2)

getwd()
source("scratch.R", print.eval=TRUE)
source("scratch.R", print.eval=TRUE)
s_df %>% ggplot(aes(x= value)) + geom_histogram(color='#023020', fill='gray') + facet_wrap(~variable, scales = 'free',  ncol = 4) + theme_bw()
featurePlot(small_df[,2:ncol(small_df)], small_df[,1], plot = "scatter", type = c("p", "smooth"), span = 1)
featurePlot(small_numeric[,2:ncol(small_numeric)], small_numeric[,1], plot = "scatter", type = c("p", "smooth"), span = 1)
colnames(small_numeric
)
small_numeric[,5] %>% head()
small_numeric[,6] %>% head()
small_numeric[,1] %>% head()
small_numeric[,1:ncol(small_numeric)-1] %>% head()
featurePlot(small_numeric[,1:ncol(small_numeric)-1], small_numeric[,6], plot = "scatter", type = c("p", "smooth"), span = 1)
featurePlot(small_numeric[,1:ncol(small_numeric)-1], small_numeric[,1], plot = "scatter", type = c("p", "smooth"), span = 1)
featurePlot(small_numeric[,1:ncol(small_numeric)-1], small_numeric[,6], plot = "pair", type = c("p", "smooth"), span = 1)
featurePlot(small_numeric[,1:ncol(small_numeric)-1], small_numeric[,6], plot = "pairs", type = c("p", "smooth"), span = 1)
source("scratch.R", print.eval=TRUE)
featurePlot(small_numeric[,1:ncol(small_numeric)-1], small_numeric[,6], plot = "scatter", type = c("p", "smooth"), span = 1)
featurePlot(small_numeric[,1:ncol(small_numeric)-1], small_numeric[,6], plot = "pairs", type = c("p", "smooth"), span = 1)
small %>% ggplot() + geom_point(mapping = aes(x=`Total Profit`, y = `Unit Price`))
small %>% ggplot() + geom_point(mapping = aes(y=`Total Profit`, x = `Unit Price`))
colnames(small)
small %>% ggplot() + geom_point(mapping = aes(y=`Total Profit`, x = `Unit Price`, fill=Region))
small %>% ggplot() + geom_bar(mapping = aes(y=`Total Profit`, x=Region))
small %>% ggplot() + geom_bar(mapping = aes(y=`Total Profit`, fill=Region))
small %>% ggplot() + geom_bar(mapping = aes(x=`Total Profit`, fill=Region))
small %>% ggplot() + geom_bar(mapping = aes(fill=Region))
small %>% ggplot() + geom_bar(mapping = aes(x=Region))
small %>% ggplot() + geom_bar(mapping = aes(x=Region, fill=Region))
small %>% ggplot(aes(x=`Total Profit`, fill=Region))) + geom_bar()
small %>% ggplot(aes(x=`Total Profit`, fill=Region)) + geom_bar()
small %>% ggplot(aes(y=`Total Profit`, x=Region,fill=Region)) + geom_bar()
small %>% ggplot(aes(y=`Total Profit`, x=Region)
)
small %>% ggplot(aes(y=`Total Profit`, fill=Region))
small %>% ggplot(aes(y=`Total Profit`, fill=Region)) + geom_bar()
small %>% ggplot(aes(y=`Total Profit`, fill=Region)) + geom_bar()
lm(small, `Total Profit` ~.)
lm(small, `Total Profit`~.)
colnames(small)
help(lm)
lm(`Total Profit` ~., data=small)
linear_model <- lm(`Total Profit` ~., data=small)
summary(linear_model)
summary(linear_model)
colnames(small)
linear_model <- lm(`Units Sold` ~., data=small)
summary(linear_model)
large <- read_csv("1000000 Sales Records.csv", col_types="fffffcncnnnnn")
linear_model <- lm(`Total Profit` ~., data=large)
large %>% select(-c(`Order Priority`))
large <- large %>% select(-c(`Order Priority`, `Order Date`, `Order ID`, `Ship Date`))
linear_model <- lm(`Total Profit` ~., data=large)
summary(linear_model)
corrplot(small_correlations)

ols_plot_cooked_chart(linear_model)
library(car)
ols_plot_cooked_chart(linear_model)
library(olsrr)
ols_plot_cooked_chart(linear_model)
ols_plot_cooksd_chart(linear_model)
ols_plo''t_cooksd_chart(linear_model)
rm(linear_model)
rm(large)
ls()
source('scratch.R', print.eval=TRUE)
linear_model <- lm(`Total Profit` ~., data=small)
summary(linear_model)
ols_plot_cooksd_chart(linear_model)
ols_plot_resid_hist(linear_model)
mean(linear_model$residuals)
library(olsrr)
ols_plot_resid_hist(linear_model)
ols_plot_resid_fit(linear_model)
colnames(small)
summary(small$`Sales Channel`)
sales_channel <- glm(data=small, family=binomial, formula=`Sales Channel` ~.)
summary(sales_channel)
sales_channel2 <- glm(data=small, family=binomial, formula=`Sales Channel` ~ `Item Type`)
summary(sales_channel2)
library(MASS)
sales_channel <- lda(data=small, formula=`Sales Channel` ~.)
sales_channel <- lda(data=small, x=`Sales Channel` ~.)
sales_channel <- lda(data=small, formula=`Sales Channel` ~., subset=`Unit Cost` >0)
sales_channel <- lda(`Sales Channel` ~., data=small, subset=`Unit Cost` >0)
sales_channel <- lda(`Sales Channel` ~., data=small)
summary(sales_channel)
data.frame(sales_channel)[1:5,]
sales_channel
library(tidyverse)
library(lubridate)
library(corrplot)
library(reshape2)
library(caret)
library(olsrr)

small <- read_csv("1000 Sales Records.csv", col_types="fffffcncnnnnn")

small$`Order Date` <- mdy(small$`Order Date`)

small$`Ship Date` <- mdy(small$`Ship Date`)

small %>% ggplot() + geom_boxplot(mapping = aes(x=`Item Type`, y=`Total Profit`), fill='red')

small %>% ggplot() + geom_boxplot(mapping = aes(x=`Sales Channel`, y=`Total Profit`), fill='red')

small %>% ggplot() + geom_boxplot(mapping = aes(x=`Item Type`, y=`Total Profit`), fill='red')
colnames(small)
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Country`, y=`Total Profit`), fill='red')
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Region`, y=`Total Profit`), fill='red')
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Order Priority`, y=`Total Profit`), fill='red')
small_numeric <- small %>% select(where(is.numeric)) %>% select(-`Order ID`)
small_correlations <- cor(small_numeric)
corrplot(small_correlations)

s_df <- small_numeric %>% melt()
s_df %>% ggplot(aes(x= value)) + geom_histogram(color='#023020', fill='gray') + facet_wrap(~variable, scales = 'free',  ncol = 4) + theme_bw()

s_df %>% ggplot(aes(x= value, break=50)) + geom_histogram(color='#023020', fill='gray') + facet_wrap(~variable, scales = 'free',  ncol = 4) + theme_bw()

s_df %>% ggplot(aes(x= value, breaks=50)) + geom_histogram(color='#023020', fill='gray') + facet_wrap(~variable, scales = 'free',  ncol = 4) + theme_bw()

s_df %>% ggplot(aes(x= value, breaks=100)) + geom_histogram(color='#023020', fill='gray') + facet_wrap(~variable, scales = 'free',  ncol = 4) + theme_bw()
s_df %>% ggplot(aes(x= value)) + geom_histogram(color='#023020', fill='gray',breaks=100) + facet_wrap(~variable, scales = 'free',  ncol = 4) + theme_bw()
help(geom_histogram)
s_df %>% ggplot(aes(x= value)) + geom_histogram(color='#023020', fill='gray',bins=100) + facet_wrap(~variable, scales = 'free',  ncol = 4) + theme_bw()
s_df %>% ggplot(aes(x= value)) + geom_histogram(color='#023020', fill='gray',bins=50) + facet_wrap(~variable, scales = 'free',  ncol = 4) + theme_bw()
featurePlot(small_numeric[,1:ncol(small_numeric)-1], small_numeric[,6], plot = "pairs", type = c("p", "smooth"), span = 1)
sample_set <- sample(nrow(small), round(nrow(small)*0.75), replace=FALSE)
sample_set
nrow(sample_set)
nrow(small)
small
sample_set <- sample(nrow(small), round(nrow(small)*0.75), replace=FALSE)
length(sample_set)
sample_set
small_train <- small[sample_set,]
small_train
nrow(sample_train)
nrow(small_train)
small_test <- small[-sample_set,]
nrow(small_test)
small_linear <- lm(`Total Profit` ~., data=small_train)
summary(small_linear)
p <- predict(lm, small_test)
p <- predict(lm, data-small_test)
help(predict)
p <- predict(small_linear, small_test)
small_test$Country
small_train$Country
small_test$Country
small_train %>% select(c(-`Country`))
small_train %>% select(-`Country`)
small_train %>% select(-Country)
colnames(small_train)
small_train %>% select(-`Country`)
small_train %>% select(`Country`)
small_train %>% dplyr::select(`Country`)
small_train %>% dplyr::select(-`Country`)
small_train <- small[sample_set,] %>% dplyr::select(-Country)
small_test <- small[-sample_set,] %>% dplyr::select(-Country)
small_linear <- lm(`Total Profit` ~., data=small_train)
summary(small_linear)
p <- predict(lm, data-small_test)
p <- predict(small_linear, small_test)
p
table(p)
RMSE
RMSE(p, small_test$`Total Profit`)
R2(p, small_test$`Total Profit`)
small_logistic <- glm(small_train, family=binomial, formula=`Total Profit` ~ .)
colnames(small_train)
small_logistic <- glm(small_train, family=binomial, formula=`Sales Channel` ~ .)
summary(small_logistic)
small_predict <- predict(small_logistic, small_test, type='response')
small_predict
table(small_test$`Sales Channel`, small_predict)
small_predict
small_predict <- ifelse(small_predict >= 0.5, 1, 0)
small_predict
table(small_test$`Sales Channel`, small_predict)
summary(small)
small$`Item Type`
small$`Item Type` %>% summary()
small$`Country` %>% summary()
help(lda)
small_lda <- lda(`Sales Channel` ~., small_train)
summary(small_lda)
small_train$`Sales Channel`
small_predict <- predict(small_lda, small_test, type='response')
small_predict <- ifelse(small_predict >= 0.5, 1, 0)

table(small_test$`Sales Channel`, small_predict)
small_predict
colnames(small_train)
small_lda <- lda(`Sales Channel` ~ `Unit Price` + Region + `Item Type` + `Total Cost`, small_train)
small_lda <- lda(`Sales Channel` ~ `Unit Price` + Region + `Item Type` , small_train)
small_lda <- lda(`Sales Channel` ~ Region + `Item Type` , small_train)
summary(small_lda)
print(small_lda)
plot(small_lda)
small_lda_predict <- data.frame(predict(small_lda, small_test))
names(small_lda_predict)
predict_lda <- cbind(small_test, small_lda_predict)
predict_lda %>% count(class, `Sales Channel`)
predict_lda %>% summarize(score = mean(class == `Sales Channel`))
predict_lda %>% count(class, `Sales Channel`) %>% table()
predict_lda %>% count(class, `Sales Channel`) 
small_logistic <- glm(small_train, family=binomial, formula=`Sales Channel` ~ .)
small_predict <- predict(small_logistic, small_test, type='response')
small_predict <- ifelse(small_predict >= 0.5, 1, 0)
table(small_test$`Sales Channel`, small_predict)

(87+55)/(87+55+74+34)
small_lda <- lda(`Sales Channel` ~ Region + `Item Type` , small_train)
p1 <- predict(small_lda, small_test)$class
p1
table(Predicted = p1, Actual = small_test$`Sales Channel`)
cat("Accuracy is:", sum(diag(tab))/sum(tab))

tab <- table(Predicted = p1, Actual = small_test$`Sales Channel`)
tab
cat("Accuracy is:", sum(diag(tab))/sum(tab))
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Item Type`, y=`Total Profit`), fill='red')

small %>% ggplot() + geom_boxplot(mapping = aes(x=`Sales Channel`, y=`Total Profit`), fill='red')
small %>% ggplot() + geom_boxplot(mapping = aes(y=`Sales Channel`, x=`Total Profit`), fill='red')
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Sales Channel`, y=`Total Profit`), fill='red')
colnames(small)
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Sales Channel`, y=`Region`), fill='red')
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Sales Channel`, y=`Unit Price`), fill='red')
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Sales Channel`, y=`Total Cost`), fill='red')
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Sales Channel`, y=`Item Type`), fill='red')
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Sales Channel`, y=`Total Revenue`), fill='red')
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Sales Channel`, y=`Units Sold`), fill='red')
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Sales Channel`, y=`Total Cost`), fill='red')
small_numeric <- small %>% select(where(is.numeric)) %>% select(-`Order ID`)
small_correlations <- cor(small_numeric)
corrplot(small_correlations)

small_logistic <- glm(small_train, family=binomial, formula=`Sales Channel` ~ .)
small_predict <- predict(small_logistic, small_test, type='response')
small_predict <- ifelse(small_predict >= 0.5, 1, 0)
table(small_test$`Sales Channel`, small_predict)

(87+55)/(87+55+74+34)
large <- read_csv("50000 Sales Records.csv", col_types="fffffcncnnnnn")
sample_set <- sample(nrow(large), round(nrow(large)*0.75), replace=FALSE)
large_train <- large[sample_set,] %>% dplyr::select(-Country)
large_test <- large[-sample_set,] %>% dplyr::select(-Country)

nrow(large_train)
nrow(large_test)
large_predict <- predict(small_logistic, large_test, type='response')
large$`Order Date` <- mdy(large$`Order Date`)
large$`Ship Date` <- mdy(large$`Ship Date`)
large_predict <- predict(small_logistic, large_test, type='response')
large_train <- large[sample_set,] %>% dplyr::select(-Country)
large_test <- large[-sample_set,] %>% dplyr::select(-Country)

large_predict <- predict(small_logistic, large_test, type='response')
large_predict <- ifelse(large_predict >= 0.5, 1, 0)
table(large_test$`Sales Channel`, large_predict)
(4061+2270)/(4061+2270+2205+3964)
summary(small)
small_train

small_train[1,]
small_train[1,] %>% print(n=100)
print(small_train[1,])
small_train %>% tbl_df
small_train[,1] %>% tbl_df
small_train[1,] %>% tbl_df
small_train[1,] %>% tbl_df %>% print(n=40)
small_train[1,] %>% as_tibble() %>% print(n=40)
small_train[1,] %>% tibble::as_tibble() %>% print(n=40)
small_train[1,] %>% tibble::as_tibble() %>% print(width=200)
2782 * 109
2782 * 35.8
304017 - 99707
small_train[10,] %>% tibble::as_tibble() %>% print(width=200)
210364-68992
1925*109
1925*35.8
2110364 - 209825
210364 - 209825
304017-303238
779/304017
(1925*35.8)/68992
small_train[20,] %>% tibble::as_tibble() %>% print(width=200)
(6897*6.92)/47727
(6897*9.33)/64349
6897*9.33
summary(small)
ggplot(data=small, aes(x=Country)) + geom_bar(stat="bin") + theme_minimal()
class(small$Country)
ggplot(data=small, aes(x=Country)) + geom_bar(stat="bin") + theme_minimal()
ggplot(data=small, aes(x=Country)) + geom_bar(stat="count") + theme_minimal()
ggplot(data=small, aes(y=Country)) + geom_bar(stat="count") + theme_minimal()
ggplot(data=small, aes(y=Country)) + geom_bar(stat="count", fill="steel_blue") + theme_minimal()
ggplot(data=small, aes(y=Country)) + geom_bar(stat="count", fill="steelblue") + theme_minimal()
ggplot(data=small, aes(y=Region)) + geom_bar(stat="count", fill="steelblue") + theme_minimal()
ggplot(data=small, aes(y=`Sales Channel`)) + geom_bar(stat="count", fill="steelblue") + theme_minimal()
ggplot(data=small, aes(y=`Order Priority`)) + geom_bar(stat="count", fill="steelblue") + theme_minimal()
ggplot(data=small, aes(y=`Item Type`)) + geom_bar(stat="count", fill="steelblue") + theme_minimal()
ggplot(data=small, aes(y=`Item Type`)) + geom_bar(stat="count", fill="steelblue") + theme_minimal()
hist(small$`Total Revenue`)
hist(small$`Unit Cost`)
hist(small$`Unit Price`)
hist(small$`Total Profit`)
small_lda <- lda(`Sales Channel` ~ Region + `Item Type` + `Total Profit` , small_train)

p1 <- predict(small_lda, small_test)$class

tab <- table(Predicted = p1, Actual = small_test$`Sales Channel`)
cat("Accuracy is:", sum(diag(tab))/sum(tab))

table(small$Country)
normalize(small$`Total Profit`)
library(dummies)
install.packages('dummies')
library(fastDummies)
dummy_cols(small$Country)
colnames(small)
dummy_cols(small$`Order Priority`)
dummy_cols(small$`Region`)
dummy_cols(small$`Item Type`)
summary(small)
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Item Type`, y=`Total Profit`), fill='red')

small %>% ggplot() + geom_boxplot(mapping = aes(x=`Sales Channel`, y=`Total Profit`), fill='red')
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Sales Channel`, y=`Total Profit`), fill='red')
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Sales Channel`, y=`Unit Cost`), fill='red')
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Sales Channel`, y=`Unit Cost`), fill='red')
colnames(small)
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Sales Channel`, y=`Unit Price`), fill='red')
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Sales Channel`, y=`Total Revenue`), fill='red')
small %>% ggplot() + geom_boxplot(mapping = aes(x=`Sales Channel`, y=`Country`), fill='red')
2
